{"version":3,"sources":["assets/game.png","Components/Langingpage.js","assets/joystick.svg","Components/Userpage.js","assets/circle.svg","assets/cross.svg","assets/question.svg","Components/GameIcon.js","assets/vs.svg","assets/win.gif","Components/WinModal.js","Components/Game.js","App.js","reportWebVitals.js","index.js"],"names":["Langingpage","props","motion","div","initial","scale","opacity","animate","exit","transition","duration","className","img","rotate","src","image","alt","to","button","type","stiffness","damping","delay","href","target","rel","Userpage","useState","player1Name","setplayer1Name","player2Name","setplayer2Name","history","useHistory","position","closeOnClick","width","x","y","placeholder","onChange","e","value","id","onClick","undefined","toast","error","localStorage","setItem","slice","push","GameIcon","iconName","circleImg","crossImg","questionImg","WinModal","winnerGif1","itemArray","Array","fill","Game","isCircle","setIsCircle","winMessage","setWinMessage","draw","setDraw","getItem","player1Tag","player2Tag","player1Score","parseInt","player2Score","resetGame","quitGame","removeItem","decideWinner","success","checkWinner","includes","vsImg","map","index","classname","delaytime","itemNumber","h3","App","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.15281144.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/game.1eafe819.png\";","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport image from '../assets/game.png';\r\nimport { motion } from 'framer-motion';\r\nconst Langingpage = (props) => {\r\n  return (\r\n    <motion.div\r\n      initial={{ scale: 0.5, opacity: 0 }}\r\n      animate={{ scale: 1, opacity: 1 }}\r\n      exit={{ opacity: 0 }}\r\n      transition={{ duration: 1 }}\r\n      className='page landing-page'\r\n    >\r\n      <div className='pagecontent'>\r\n        <h1>Tic-Tac-Toe</h1>\r\n        <motion.img\r\n          initial={{ rotate: 178, scale: 0.5, opacity: 0 }}\r\n          animate={{ rotate: 0, scale: 1, opacity: 1 }}\r\n          transition={{ duration: 1 }}\r\n          src={image}\r\n          alt='tic-tac-toe'\r\n          className='img-fluid'\r\n        />\r\n        <Link to='/player'>\r\n          <motion.button\r\n            initial={{ scale: 0 }}\r\n            animate={{ scale: 1 }}\r\n            transition={{\r\n              type: 'spring',\r\n              stiffness: 300,\r\n              damping: 20,\r\n              delay: 1,\r\n            }}\r\n          >\r\n            Get Started\r\n          </motion.button>\r\n        </Link>\r\n      </div>\r\n      <p className='developer'>\r\n        by{' '}\r\n        <a\r\n          href='https://www.linkedin.com/in/ashutoshbisoyi/'\r\n          target='_blank'\r\n          rel='noreferrer'\r\n        >\r\n          ashutoshbisoyi\r\n        </a>\r\n      </p>\r\n    </motion.div>\r\n  );\r\n};\r\n\r\nexport default Langingpage;\r\n","export default __webpack_public_path__ + \"static/media/joystick.f8d03444.svg\";","import React, { useState } from 'react';\r\nimport image from '../assets/joystick.svg';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { useHistory } from 'react-router';\r\nimport { ImCross } from 'react-icons/im';\r\nimport { RiCheckboxBlankCircleLine } from 'react-icons/ri';\r\nimport { motion } from 'framer-motion';\r\n\r\nconst Userpage = () => {\r\n  const [player1Name, setplayer1Name] = useState();\r\n  const [player2Name, setplayer2Name] = useState();\r\n  const history = useHistory();\r\n\r\n  const submitUser = () => {\r\n    if (\r\n      player1Name === undefined ||\r\n      player2Name === undefined ||\r\n      player1Name === '' ||\r\n      player2Name === ''\r\n    ) {\r\n      toast.error('Enter the player name');\r\n    } else {\r\n      localStorage.setItem('player1Name', player1Name.slice(0, 10));\r\n      localStorage.setItem('player2Name', player2Name.slice(0, 10));\r\n      localStorage.setItem('player1Score', 0);\r\n      localStorage.setItem('player2Score', 0);\r\n      history.push('/game');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <ToastContainer position='bottom-center' closeOnClick width='300px' />\r\n      <div className='page player-page'>\r\n        <div className='pagecontent'>\r\n          <motion.img\r\n            initial={{ x: 50, opacity: 0 }}\r\n            animate={{ x: 0, opacity: 1 }}\r\n            transition={{ duration: 1 }}\r\n            src={image}\r\n            alt='player selection'\r\n            className='img-fluid'\r\n          />\r\n          <>\r\n            <motion.div\r\n              initial={{ y: 50, opacity: 0 }}\r\n              animate={{ y: 0, opacity: 1 }}\r\n              transition={{ duration: 0.5 }}\r\n              className='input-group mb-3'\r\n            >\r\n              <input\r\n                type='text'\r\n                className='form-control'\r\n                placeholder='Player 1'\r\n                onChange={(e) => setplayer1Name(e.target.value)}\r\n              />\r\n              <span className='input-group-text' id='basic-addon1'>\r\n                <ImCross />\r\n              </span>\r\n            </motion.div>\r\n            <motion.div\r\n              initial={{ y: 50, opacity: 0 }}\r\n              animate={{ y: 0, opacity: 1 }}\r\n              transition={{ duration: 0.5, delay: 0.1 }}\r\n              className='input-group mb-3'\r\n            >\r\n              <input\r\n                type='text'\r\n                className='form-control'\r\n                placeholder='Player 2'\r\n                onChange={(e) => setplayer2Name(e.target.value)}\r\n              />\r\n              <span className='input-group-text' id='basic-addon1'>\r\n                <RiCheckboxBlankCircleLine />\r\n              </span>\r\n            </motion.div>\r\n            <motion.button\r\n              initial={{ scale: 0 }}\r\n              animate={{ scale: 1 }}\r\n              transition={{\r\n                type: 'spring',\r\n                stiffness: 300,\r\n                damping: 20,\r\n                delay: 0.6,\r\n              }}\r\n              type='submit'\r\n              className='btn btn-primary'\r\n              onClick={submitUser}\r\n            >\r\n              Start Playing\r\n            </motion.button>\r\n          </>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Userpage;\r\n","export default __webpack_public_path__ + \"static/media/circle.5bfc9d8c.svg\";","export default __webpack_public_path__ + \"static/media/cross.45c4a03e.svg\";","export default __webpack_public_path__ + \"static/media/question.3722e6d9.svg\";","import React from 'react';\r\nimport circleImg from '../assets/circle.svg';\r\nimport crossImg from '../assets/cross.svg';\r\nimport questionImg from '../assets/question.svg';\r\nconst GameIcon = ({ iconName }) => {\r\n  switch (iconName) {\r\n    case 'circle':\r\n      return <img src={circleImg} alt='circle' className='img-fluid' />;\r\n    case 'cross':\r\n      return <img src={crossImg} alt='cross' className='img-fluid' />;\r\n    default:\r\n      return <img src={questionImg} alt='question' className='img-fluid' />;\r\n  }\r\n};\r\n\r\nexport default GameIcon;\r\n","export default __webpack_public_path__ + \"static/media/vs.2ed4b3b8.svg\";","export default __webpack_public_path__ + \"static/media/win.d92bc18f.gif\";","import React from 'react';\r\nimport winnerGif1 from '../assets/win.gif';\r\nconst WinModal = () => {\r\n  return (\r\n    <div className='modal win-modal'>\r\n      <div className='content'>\r\n        <img src={winnerGif1} alt='winner' className='img-fluid' />\r\n        <h1>Text</h1>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WinModal;\r\n","import React, { useState } from 'react';\r\nimport GameIcon from './GameIcon';\r\nimport vsImg from '../assets/vs.svg';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport winnerGif1 from '../assets/win.gif';\r\nimport WinModal from './WinModal';\r\nimport { GrPowerReset } from 'react-icons/gr';\r\nimport { CgLogOut } from 'react-icons/cg';\r\nimport { Redirect, useHistory } from 'react-router';\r\nimport { motion } from 'framer-motion';\r\n\r\nconst itemArray = new Array(9).fill('empty');\r\n\r\nconst Game = () => {\r\n  const [isCircle, setIsCircle] = useState(false);\r\n  const [winMessage, setWinMessage] = useState();\r\n  const [draw, setDraw] = useState(false);\r\n  const [player1Name] = useState(localStorage.getItem('player1Name'));\r\n  const [player2Name] = useState(localStorage.getItem('player2Name'));\r\n  const history = useHistory();\r\n\r\n  const player1Tag = player1Name && player1Name.slice(0, 1);\r\n  const player2Tag = player2Name && player2Name.slice(0, 1);\r\n\r\n  const player1Score = parseInt(localStorage.getItem('player1Score'));\r\n  const player2Score = parseInt(localStorage.getItem('player2Score'));\r\n\r\n  const resetGame = () => {\r\n    setIsCircle(false);\r\n    setWinMessage('');\r\n    setDraw(false);\r\n    itemArray.fill('empty', 0, 9);\r\n  };\r\n\r\n  const quitGame = () => {\r\n    resetGame();\r\n    localStorage.removeItem('player1Name');\r\n    localStorage.removeItem('player2Name');\r\n    localStorage.removeItem('player1Score');\r\n    localStorage.removeItem('player2Score');\r\n    history.push('/');\r\n  };\r\n\r\n  const handleDraw = () => {\r\n    setDraw(true);\r\n    toast.error('Oops! Game Draw');\r\n  };\r\n  const decideWinner = () => {\r\n    setWinMessage(`Yeh! ${isCircle ? player2Name : player1Name} Won`);\r\n    isCircle\r\n      ? localStorage.setItem('player2Score', player2Score + 1)\r\n      : localStorage.setItem('player1Score', player1Score + 1);\r\n    toast.success(`Yeh! ${isCircle ? player2Name : player1Name} Won`);\r\n  };\r\n  const checkWinner = () => {\r\n    if (\r\n      itemArray[0] === itemArray[1] &&\r\n      itemArray[0] === itemArray[2] &&\r\n      itemArray[0] !== 'empty'\r\n    ) {\r\n      decideWinner();\r\n    } else if (\r\n      itemArray[3] === itemArray[4] &&\r\n      itemArray[3] === itemArray[5] &&\r\n      itemArray[3] !== 'empty'\r\n    ) {\r\n      decideWinner();\r\n    } else if (\r\n      itemArray[6] === itemArray[7] &&\r\n      itemArray[6] === itemArray[8] &&\r\n      itemArray[6] !== 'empty'\r\n    ) {\r\n      decideWinner();\r\n    } else if (\r\n      itemArray[0] === itemArray[3] &&\r\n      itemArray[0] === itemArray[6] &&\r\n      itemArray[0] !== 'empty'\r\n    ) {\r\n      decideWinner();\r\n    } else if (\r\n      itemArray[1] === itemArray[4] &&\r\n      itemArray[1] === itemArray[7] &&\r\n      itemArray[1] !== 'empty'\r\n    ) {\r\n      decideWinner();\r\n    } else if (\r\n      itemArray[2] === itemArray[5] &&\r\n      itemArray[2] === itemArray[8] &&\r\n      itemArray[2] !== 'empty'\r\n    ) {\r\n      decideWinner();\r\n    } else if (\r\n      itemArray[0] === itemArray[4] &&\r\n      itemArray[0] === itemArray[8] &&\r\n      itemArray[0] !== 'empty'\r\n    ) {\r\n      decideWinner();\r\n    } else if (\r\n      itemArray[2] === itemArray[4] &&\r\n      itemArray[2] === itemArray[6] &&\r\n      itemArray[2] !== 'empty'\r\n    ) {\r\n      decideWinner();\r\n    } else if (!itemArray.includes('empty')) {\r\n      handleDraw();\r\n    }\r\n  };\r\n  const handleClick = (itemNumber) => {\r\n    if (winMessage) {\r\n      return toast.success(winMessage);\r\n    }\r\n    if (itemArray[itemNumber] === 'empty') {\r\n      itemArray[itemNumber] = isCircle ? 'circle' : 'cross';\r\n      setIsCircle(!isCircle);\r\n    } else {\r\n      return toast.error('Filled Already');\r\n    }\r\n    checkWinner();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {player1Name && player2Name ? (\r\n        <>\r\n          <WinModal />\r\n          <ToastContainer position='bottom-center' closeOnClick width='300px' />\r\n          <div className='game-page'>\r\n            <div className='statistics'>\r\n              <motion.div\r\n                initial={{ scale: 0 }}\r\n                animate={{ scale: 1 }}\r\n                transition={{\r\n                  type: 'spring',\r\n                  stiffness: 300,\r\n                  damping: 20,\r\n                  delay: 0.2,\r\n                }}\r\n                className='player p1'\r\n              >\r\n                {player1Tag}\r\n              </motion.div>\r\n              <motion.div\r\n                initial={{ y: -100 }}\r\n                animate={{ y: 0 }}\r\n                transition={{\r\n                  type: 'spring',\r\n                  stiffness: 300,\r\n                  damping: 20,\r\n                  delay: 0.2,\r\n                }}\r\n              >\r\n                <h3>Score Board</h3>\r\n                <h4>\r\n                  {player1Score ? player1Score : 0} :{' '}\r\n                  {player2Score ? player2Score : 0}\r\n                </h4>\r\n              </motion.div>\r\n              <motion.div\r\n                initial={{ scale: 0 }}\r\n                animate={{ scale: 1 }}\r\n                transition={{\r\n                  type: 'spring',\r\n                  stiffness: 300,\r\n                  damping: 20,\r\n                  delay: 0.4,\r\n                }}\r\n                className='player p2'\r\n              >\r\n                {player2Tag}\r\n              </motion.div>\r\n            </div>\r\n            <motion.div\r\n              initial={{ opacity: 0 }}\r\n              animate={{ opacity: 1 }}\r\n              transition={{\r\n                delay: 0.4,\r\n              }}\r\n              className='player-info'\r\n            >\r\n              <h5>\r\n                {player1Name} <img src={vsImg} alt='vs' className='img-fluid' />{' '}\r\n                {player2Name}\r\n              </h5>\r\n            </motion.div>\r\n            <motion.div\r\n              initial={{ scale: 0.5, opacity: 0 }}\r\n              animate={{ scale: 1, opacity: 1 }}\r\n              transition={{ duration: 0.3 }}\r\n              className='play-board'\r\n            >\r\n              <div className='row'>\r\n                {itemArray.map((value, index) => {\r\n                  let classname = `box b${index}`;\r\n                  let delaytime = `0.${1 + index}`;\r\n                  return (\r\n                    <motion.div\r\n                      initial={{ scale: 0.5, opacity: 0 }}\r\n                      animate={{ scale: 1, opacity: 1 }}\r\n                      transition={{ duration: 0.5, delay: delaytime }}\r\n                      className='col-4 cols'\r\n                      key={index}\r\n                      onClick={() => handleClick(index)}\r\n                    >\r\n                      <div className={classname}>\r\n                        <GameIcon iconName={value} />\r\n                      </div>\r\n                    </motion.div>\r\n                  );\r\n                })}\r\n              </div>\r\n            </motion.div>\r\n            {!draw && (\r\n              <div className='my-3 text-center'>\r\n                {winMessage ? (\r\n                  <motion.div\r\n                    initial={{ scale: 0 }}\r\n                    animate={{ scale: 1 }}\r\n                    transition={{\r\n                      type: 'spring',\r\n                      stiffness: 300,\r\n                      damping: 10,\r\n                      delay: 0.2,\r\n                    }}\r\n                    className='my-modal'\r\n                  >\r\n                    <div>\r\n                      <img src={winnerGif1} alt='winner' />\r\n                      <h1>{winMessage}</h1>\r\n                      <button onClick={resetGame}>\r\n                        <GrPowerReset /> Restart Game\r\n                      </button>\r\n                      <button onClick={quitGame}>\r\n                        <CgLogOut /> Quit Game\r\n                      </button>\r\n                    </div>\r\n                    <p className='developer'>\r\n                      Developed by{' '}\r\n                      <a\r\n                        href='https://www.linkedin.com/in/ashutoshbisoyi/'\r\n                        target='_blank'\r\n                        rel='noreferrer'\r\n                      >\r\n                        ashutoshbisoyi\r\n                      </a>\r\n                    </p>\r\n                  </motion.div>\r\n                ) : isCircle ? (\r\n                  <motion.h3\r\n                    initial={{ opacity: 0 }}\r\n                    animate={{ opacity: 1 }}\r\n                    transition={{\r\n                      delay: 0.4,\r\n                    }}\r\n                    className='hint-message'\r\n                  >\r\n                    Circle's Turn\r\n                  </motion.h3>\r\n                ) : (\r\n                  <motion.h3\r\n                    initial={{ opacity: 0 }}\r\n                    animate={{ opacity: 1 }}\r\n                    transition={{\r\n                      delay: 0.4,\r\n                    }}\r\n                    className='hint-message'\r\n                  >\r\n                    Cross's Turn\r\n                  </motion.h3>\r\n                )}\r\n              </div>\r\n            )}\r\n            {draw && (\r\n              <center>\r\n                <span className='text-secondary mt-5'>\r\n                  Seem to be powerful opponents\r\n                </span>\r\n                <button className='restart-btn' onClick={resetGame}>\r\n                  <GrPowerReset /> Restart\r\n                </button>\r\n              </center>\r\n            )}\r\n            <motion.button\r\n              initial={{ x: 80 }}\r\n              animate={{ x: 0 }}\r\n              transition={{\r\n                type: 'spring',\r\n                stiffness: 300,\r\n                damping: 20,\r\n                delay: 0.6,\r\n              }}\r\n              className='quit-btn'\r\n              onClick={quitGame}\r\n            >\r\n              <CgLogOut />\r\n            </motion.button>\r\n          </div>\r\n        </>\r\n      ) : (\r\n        <Redirect to='/player' />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Game;\r\n","import './App.css';\nimport Langingpage from './Components/Langingpage';\nimport Userpage from './Components/Userpage';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport Game from './Components/Game';\nconst App = () => {\n  return (\n    <div className='App'>\n      <Router>\n        <Switch>\n          <Route exact path='/' component={Langingpage} />\n          <Route exact path='/player' component={Userpage} />\n          <Route exact path='/game' component={Game} />\n        </Switch>\n      </Router>\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\nreportWebVitals();\n"],"sourceRoot":""}